#include <algorithm>
#include <cstdio>
#define N 100005
typedef long long LL;
int n,m,a[N],pos[N],size,rt[N],ls[N*100],rs[N*100],sum[N*100],tot;
inline int lowbit(int x) {return x&(-x);}
void update(int l,int r,int &x,int t,int v)
{
    if(!x) x=++tot;
    sum[x]+=v;
    if(l==r) return;
    int mid=(l+r)>>1;
    if(t<=mid) update(l,mid,ls[x],t,v);
    else update(mid+1,r,rs[x],t,v);
}
void modify(int x,int y,int v)
{
    for(;x<=n;x+=lowbit(x)) 
    update(1,n,rt[x],y,v);
}
LL query(int l,int r,int x,int L,int R)
{
    if(!x) return 0;
    if(L<=l&&r<=R) return sum[x];
    int mid=(l+r)>>1;LL ret=0;
    if(L<=mid) ret+=query(l,mid,ls[x],L,R);
    if(R>mid) ret+=query(mid+1,r,rs[x],L,R);
    return ret;
}
LL ask(int l,int r,int L,int R)
{
    LL ret=0;
    for(int i=l-1;i;i-=lowbit(i)) ret-=query(1,n,rt[i],L,R);
    for(int i=r;i;i-=lowbit(i)) ret+=query(1,n,rt[i],L,R);
    return ret;
}
int main()
{
//  freopen("inverse.in","r",stdin);
//  freopen("inverse.out","w",stdout);
    scanf("%d%d",&n,&m);
    for(int i=1;i<=n;++i)
    {
        scanf("%d",&a[i]);
        pos[a[i]]=i;
        modify(i,a[i],1);
    }
    LL ans=0;
    for(int i=1;i<=n;++i) ans+=ask(1,i-1,a[i]+1,n)+ask(i+1,n,1,a[i]-1);
    ans>>=1;
    for(int v;m--;)
    {
        printf("%lld\n",ans);
        scanf("%d",&v);
        v=pos[v];
        ans-=ask(1,v-1,a[v]+1,n)+ask(v+1,n,1,a[v]-1);
        modify(v,a[v],-1);
    }
    return 0;
}
