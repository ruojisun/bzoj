#include <algorithm>
#include <cstring>
#include <cstdio>
#include <vector>
 
#define Max 400000
 
using namespace std;
vector<int>G[Max],ans;
bool vis[Max];
int sum,n,m,k,fa[Max],des[Max];
int find_father(int x)
{
    return x==fa[x]?x:fa[x]=find_father(fa[x]);
}
void ss(int u)
{
    sum++;
    vis[u]=1;
    for(int j=0;j<G[u].size();++j)
    {
        int v=G[u][j];
        if(vis[v])
        {
            int fx=find_father(u),fy=find_father(v);
            if(fx!=fy)
            {
                fa[fy]=fx;
                sum--;
            }
        }
    }
}
int main()
{
    scanf("%d%d",&n,&m);
    for(int x,y;m--;)
    {
        scanf("%d%d",&x,&y);
        G[x].push_back(y);
        G[y].push_back(x);
    }
    for(int i=0;i<=n;i++) fa[i]=i;
    memset(vis,1,sizeof(vis));
    scanf("%d",&k);
    for(int i=1;i<=k;++i)
    {
        scanf("%d",&des[i]);
        vis[des[i]]=0;
    }
    for(int i=0;i<n;++i) 
    if(vis[i])
    ss(i);
    ans.push_back(sum);
    for(int i=k;i>=1;--i)
    {
        ss(des[i]);
        ans.push_back(sum); 
    }
    for(int i=ans.size()-1;i>=0;i--)
    printf("%d\n",ans[i]);
    return 0;
}
ï»¿
