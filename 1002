#include <cstring>
#include <cstdio>
#define cl(a) memset(a,0,sizeof(a))
#define rep(a,b,c) for(int a=b;a<=c;++a)
#define REP(a,b) for(;a&&b==0;--a)
#define Rep(a,b,c) for(int a=b;a<=c;++a)
#define ReP(a,b,c) for(int a=b;a>=c;--a)

struct node
{
    int a[100];
    node() {cl(a);}
    void output() {ReP(i,a[0],1) printf("%d",a[i]);}
}f[105];
inline node operator*(node a,int b)
{
    node c;
    c.a[0]=a.a[0]+1;
    rep(i,1,c.a[0]) c.a[i]=a.a[i]*b;
    int t=0;
    rep(i,1,c.a[0])
    {
        c.a[i]+=t;
        if(c.a[i]>=10) {t=c.a[i]/10,c.a[i]%=10;}
        else t=0;
    }
    REP(c.a[0],c.a[c.a[0]]);
    return c;
}
inline node operator-(node a,node b)
{
    node c;
	c.a[0]=a.a[0]+1;
	int i;
    Rep(i,1,a.a[0])
    {
        while(a.a[i]<b.a[i]) a.a[i]+=10,a.a[i+1]--;
        c.a[i]=a.a[i]-b.a[i];
    }
    REP(c.a[0],c.a[c.a[0]]);
    return c;
}
inline node operator+(node a,int b)
{
    node c=a;
    c.a[1]+=2;int i=1;
    while(c.a[i]>=10)
    {
        c.a[i+1]+=c.a[i]/10;
        c.a[i]%=10;
        ++i;
    }
    REP(c.a[0],c.a[c.a[0]]);
    return c;
}
int n;
int main()
{
    scanf("%d",&n);
    f[0].a[0]=1,f[1].a[0]=1,f[1].a[1]=1;
    rep(i,2,n)
     f[i]=f[i-1]*3,f[i]=f[i]-f[i-2],f[i]=f[i]+2;
    f[n].output();
    return 0;
}
