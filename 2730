#include <cstring>
#include <cstdio>
#define N 5005
#define cl(a) memset(a,0,sizeof(a))

int m,ans1,cnt=1,tim,top,stack[N],f[N],low[N],dfn[N],nextt[N],to[N],head[N];
long long ans2=1;
inline void ins(int u,int v)
{
	nextt[++cnt]=head[u];
	to[cnt]=v;
	head[u]=cnt;
}
inline int min(int a,int b) {return a>b?b:a;}
void tarjan(int x,int pre)
{
	low[x]=dfn[x]=++tim;
	for(int i=head[x];i;i=nextt[i])
	{
		if((i^1)==pre) continue;
		int v=to[i];
		if(!dfn[v])
		{
			tarjan(v,i);
			if(low[v]>=dfn[x]) f[x]++;
			low[x]=min(low[x],low[v]);
		}
		else low[x]=min(low[x],dfn[v]);
	}
}
inline int max(int a,int b) {return a>b?a:b;}
void Dfs(int x,int pre)
{
	dfn[x]=low[x]=++tim;
	stack[++top]=x;
	for(int i=head[x];i;i=nextt[i])
	{
		if((i^1)==pre) continue;
		int v=to[i];
		if(!dfn[v])
		{
			Dfs(v,i);
			if(low[v]>=dfn[x])
			{
				int k,tmp=0,siz=0;
				do
				{
					k=stack[top--];
					if(f[k]>=2) ++tmp;
					++siz;
				}while(k!=v);
				k=x;
				if(f[k]>=2) ++tmp;
				++siz;
				if(!tmp) ans1+=2,ans2*=siz*(siz-1)/2;
				else if(tmp==1) ans1++,ans2*=(siz-1);
			}
			low[x]=min(low[x],low[v]);
		}
		else low[x]=min(low[x],dfn[v]);
	}
}
inline void init()
{
	tim=ans1=0;
	cnt=ans2=1;
	cl(f);
	cl(low);
	cl(dfn);
	cl(head);
}
int Main()
{
	for(int T=0;scanf("%d",&m)&&m;)
	{
		int n=0;
		for(int x,y,i=1;i<=m;++i)
		{
			scanf("%d%d",&x,&y);
			ins(x,y);
			ins(y,x);
			n=max(n,max(x,y));
		}
		for(int i=1;i<=n;++i) 
		if(!dfn[i]) tarjan(i,-1);
		else ++f[i];
		cl(dfn);
		for(int i=1;i<=n;++i) if(!dfn[i]) Dfs(i,-1);
		printf("Case %d: %d %lld\n",++T,ans1,ans2);
		init();
	}
	return 0;
}
int sb=Main();
int main(int argc,char *argv[]){;}
